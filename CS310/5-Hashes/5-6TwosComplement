// 8-bit twos complement
// 6/6/22

/*
0 0 0 0 0 0 0 0 = 0
0 0 0 0 0 0 0 1 = 1
0 0 0 0 0 0 1 0 = 2
0 1 1 1 1 1 1 0 = 126
0 1 1 1 1 1 1 1 = 127
1 1 1 1 1 1 1 1 = -1
1 1 1 1 1 1 1 0 = -2
1 0 0 0 0 0 0 1 = -126
1 0 0 0 0 0 0 0 = -127

public int hashCode()
- return a number that is negative or positive
- data.hashCode() & 07fffffff;
- 07fffffff = 0111 1111 1111 1111 1111 1111 1111 1111

-1 & 0x7fffffff -> 2147483647
-10 & 0x7fffffff -> 2147483638

public int hashCode(String s)

int hashval = data.hashCode(s)
hashval = hashval & 0x7fffffff
hashval = hashval % tableSize
- gives us location of our table at our data
- positive
- in the table
*/